#**********************************
# This file is part of Alkalami font family (http://software.sil.org/alkalami/) 
# and is Copyright (c) 2015-2022 SIL International (http://www.sil.org/),
# with Reserved Font Names "Alkalami" and "SIL".
#
# This Font Software is licensed under the SIL Open Font License, Version 1.1.
#
# You should have received a copy of the license along with this Font Software.
# If this is not the case, go to (http://scripts.sil.org/OFL) for all the
# details including an FAQ.
#**********************************

#**********************************
#  Language Systems
#**********************************

languagesystem DFLT dflt;
languagesystem arab dflt;
languagesystem latn dflt;

@MarksAbove = [@_top] ;
@MarksBelow = [@_bottom] ;
@MarksAny = [@_top @_bottom] ;

#**********************************
#  Classes
#**********************************

# These can be automatically built in the future
#    <!-- *NEXT 4 CLASSES MUST MATCH* -->

@DualLinkIsol = [
              behDotless-ar  beh-ar  peh-ar  beeh-ar  teh-ar  theh-ar
							behThreedotsupbelow-ar  behVinvertedbelow-ar  behVabove-ar  behVbelow-ar  behhamzaabove-ar
							jeem-ar  nyeh-ar  hah-ar  khah-ar  seen-ar  sheen-ar  sad-ar  dad-ar  tah-ar  tahThreedots-ar  zah-ar
							ain-ar  ainThreedots-ar  ainTwodotshorizontalabove-ar  ghain-ar  ghainThreedotsabove-ar
							feh-ar  veh-ar  fehDotless-ar  fehDotmovedbelow-ar  fehTwodotsbelow-ar  fehAfrican-ar
							qafDotless-ar  qaf-ar  qafDotabove-ar  qafThreedotsabove-ar  qafAfrican-ar  qafThreedotsaboveAfrican-ar
							kaf-ar  keheh-ar  kehehThreedotsabove-ar  gaf-ar  kafswash-ar  ng-ar
							lam-ar  meem-ar  noon-ar  noonghunna-ar  noonTwodotsbelow-ar  noonAfrican-ar
							heh-ar  alefMaksura-ar  yeh-ar  yehHamzaabove-ar  yehTwodotsbelowHamzaabove-ar
							yehTwodotsbelowDotabove-ar  yeh-farsi  e-ar  yehThreedotsbelow-ar
							tehThreedotsdown-ar dyeh-ar jeemTwodotsabove-ar tahTwodotsabove-ar
							fehThreedotsbelow-ar fehThreedotsupbelow-ar yehThreedotsabove-farsi behThreedotsupabove-ar];

@DualLinkInit = [
              behDotless-ar.init  beh-ar.init  peh-ar.init  beeh-ar.init  teh-ar.init  theh-ar.init
							behThreedotsupbelow-ar.init  behVinvertedbelow-ar.init  behVabove-ar.init  behVbelow-ar.init  behhamzaabove-ar.init
							jeem-ar.init  nyeh-ar.init  hah-ar.init  khah-ar.init  seen-ar.init  sheen-ar.init  sad-ar.init  dad-ar.init  tah-ar.init  
							tahThreedots-ar.init  zah-ar.init
							ain-ar.init  ainThreedots-ar.init  ainTwodotshorizontalabove-ar.init  ghain-ar.init  ghainThreedotsabove-ar.init
							feh-ar.init  veh-ar.init  fehDotless-ar.init  fehDotmovedbelow-ar.init  fehTwodotsbelow-ar.init  fehAfrican-ar.init
							qafDotless-ar.init  qaf-ar.init  qafDotabove-ar.init  qafThreedotsabove-ar.init  qafAfrican-ar.init  qafThreedotsaboveAfrican-ar.init
							kaf-ar.init  keheh-ar.init  kehehThreedotsabove-ar.init  gaf-ar.init  kafswash-ar.init  ng-ar.init
							lam-ar.init  meem-ar.init  noon-ar.init  noonghunna-ar.init  noonTwodotsbelow-ar.init  noonAfrican-ar.init
							heh-ar.init  alefMaksura-ar.init  yeh-ar.init  yehHamzaabove-ar.init  yehTwodotsbelowHamzaabove-ar.init
							yehTwodotsbelowDotabove-ar.init  yeh-farsi.init  e-ar.init  yehThreedotsbelow-ar.init
							tehThreedotsdown-ar.init dyeh-ar.init jeemTwodotsabove-ar.init tahTwodotsabove-ar.init
							fehThreedotsbelow-ar.init fehThreedotsupbelow-ar.init yehThreedotsabove-farsi.init behThreedotsupabove-ar.init];

@DualLinkMedi = [
              behDotless-ar.medi  beh-ar.medi  peh-ar.medi  beeh-ar.medi  teh-ar.medi  theh-ar.medi
							behThreedotsupbelow-ar.medi  behVinvertedbelow-ar.medi  behVabove-ar.medi  behVbelow-ar.medi  behhamzaabove-ar.medi
							jeem-ar.medi  nyeh-ar.medi  hah-ar.medi  khah-ar.medi  seen-ar.medi  sheen-ar.medi  sad-ar.medi  dad-ar.medi  tah-ar.medi  tahThreedots-ar.medi  zah-ar.medi
							ain-ar.medi  ainThreedots-ar.medi  ainTwodotshorizontalabove-ar.medi  ghain-ar.medi  ghainThreedotsabove-ar.medi
							feh-ar.medi  veh-ar.medi  fehDotless-ar.medi  fehDotmovedbelow-ar.medi  fehTwodotsbelow-ar.medi  fehAfrican-ar.medi
							qafDotless-ar.medi  qaf-ar.medi  qafDotabove-ar.medi  qafThreedotsabove-ar.medi  qafAfrican-ar.medi  qafThreedotsaboveAfrican-ar.medi
							kaf-ar.medi  keheh-ar.medi  kehehThreedotsabove-ar.medi  gaf-ar.medi  kafswash-ar.medi  ng-ar.medi
							lam-ar.medi  meem-ar.medi  noon-ar.medi  noonghunna-ar.medi  noonTwodotsbelow-ar.medi  noonAfrican-ar.medi
							heh-ar.medi  alefMaksura-ar.medi  yeh-ar.medi  yehHamzaabove-ar.medi  yehTwodotsbelowHamzaabove-ar.medi
							yehTwodotsbelowDotabove-ar.medi  yeh-farsi.medi  e-ar.medi  yehThreedotsbelow-ar.medi
							tehThreedotsdown-ar.medi dyeh-ar.medi jeemTwodotsabove-ar.medi tahTwodotsabove-ar.medi
							fehThreedotsbelow-ar.medi fehThreedotsupbelow-ar.medi yehThreedotsabove-farsi.medi behThreedotsupabove-ar.medi];

@DualLinkFina = [
              behDotless-ar.fina  beh-ar.fina  peh-ar.fina  beeh-ar.fina  teh-ar.fina  theh-ar.fina
							behThreedotsupbelow-ar.fina  behVinvertedbelow-ar.fina  behVabove-ar.fina  behVbelow-ar.fina  behhamzaabove-ar.fina
							jeem-ar.fina  nyeh-ar.fina  hah-ar.fina  khah-ar.fina  seen-ar.fina  sheen-ar.fina  sad-ar.fina  dad-ar.fina  tah-ar.fina  tahThreedots-ar.fina  zah-ar.fina
							ain-ar.fina  ainThreedots-ar.fina  ainTwodotshorizontalabove-ar.fina  ghain-ar.fina  ghainThreedotsabove-ar.fina
							feh-ar.fina  veh-ar.fina  fehDotless-ar.fina  fehDotmovedbelow-ar.fina  fehTwodotsbelow-ar.fina  fehAfrican-ar.fina
							qafDotless-ar.fina  qaf-ar.fina  qafDotabove-ar.fina  qafThreedotsabove-ar.fina  qafAfrican-ar.fina  qafThreedotsaboveAfrican-ar.fina
							kaf-ar.fina  keheh-ar.fina  kehehThreedotsabove-ar.fina  gaf-ar.fina  kafswash-ar.fina  ng-ar.fina
							lam-ar.fina  meem-ar.fina  noon-ar.fina  noonghunna-ar.fina  noonTwodotsbelow-ar.fina  noonAfrican-ar.fina
							heh-ar.fina  alefMaksura-ar.fina  yeh-ar.fina  yehHamzaabove-ar.fina  yehTwodotsbelowHamzaabove-ar.fina
							yehTwodotsbelowDotabove-ar.fina  yeh-farsi.fina  e-ar.fina  yehThreedotsbelow-ar.fina
							tehThreedotsdown-ar.fina dyeh-ar.fina jeemTwodotsabove-ar.fina tahTwodotsabove-ar.fina
							fehThreedotsbelow-ar.fina fehThreedotsupbelow-ar.fina yehThreedotsabove-farsi.fina behThreedotsupabove-ar.fina];

#    <!-- *NEXT 2 CLASSES MUST MATCH* -->

@RightLinkIsol = [
                alef-ar  alefHamzaabove-ar  alefHamzabelow-ar  alefMadda-ar
								dal-ar  thal-ar  reh-ar  zain-ar  jeh-ar
								tehMarbuta-ar  waw-ar  wawHamzaabove-ar  oe-ar  yu-ar  kirghizyu-ar
								yehbarree-ar  yehbarreeHamzaabove-ar alefFathaattached-ar alefRightmiddlestroke-ar alefKasraattached-ar];

@RightLinkFina = [
                alef-ar.fina  alefHamzaabove-ar.fina  alefHamzabelow-ar.fina  alefMadda-ar.fina
								dal-ar.fina  thal-ar.fina  reh-ar.fina  zain-ar.fina  jeh-ar.fina
								tehMarbuta-ar.fina  waw-ar.fina  wawHamzaabove-ar.fina  oe-ar.fina  yu-ar.fina  kirghizyu-ar.fina
								yehbarree-ar.fina  yehbarreeHamzaabove-ar.fina alefFathaattached-ar.fina alefRightmiddlestroke-ar.fina alefKasraattached-ar.fina];

#    ===============================
#    Lam-alef ligatures
#    =============================== 


# These are hand generated
@RightLinkIsol_Alef = [ alef-ar.wide  alef-ar.wideshort lam_alefMadda-ar  lam_alefHamzaabove-ar  lam_alefHamzabelow-ar  lam_alef-ar ];
@RightLinkFina_Alef = [ alef-ar.wide.fina  alef-ar.wideshort.fina lam_alefMadda-ar.fina  lam_alefHamzaabove-ar.fina  lam_alefHamzabelow-ar.fina  lam_alef-ar.fina];

# HAH CLASSES ARE USED FOR STACKING. Hand generated.
# *NEXT 4 CLASSES MUST MATCH*								
@hahMedials =     [ hah-ar.medi jeem-ar.medi khah-ar.medi nyeh-ar.medi dyeh-ar.medi jeemTwodotsabove-ar.medi ];
@hahMedials_low = [ hah-ar.medi.low jeem-ar.medi.low khah-ar.medi.low nyeh-ar.medi.low dyeh-ar.medi.low jeemTwodotsabove-ar.medi.low];
@hahMedials_flat = [ hah-ar.medi.ss07 jeem-ar.medi.ss07 khah-ar.medi.ss07 nyeh-ar.medi.ss07 dyeh-ar.medi.ss07 jeemTwodotsabove-ar.medi.ss07];
# With alternate attachment points for stacking:
@hahMedials_stack = [ hah-ar.medi.stack jeem-ar.medi.stack khah-ar.medi.stack nyeh-ar.medi.stack dyeh-ar.medi.stack jeemTwodotsabove-ar.medi.stack];

# *NEXT 2 CLASSES MUST MATCH*								
@hahMedi_any      = [ @hahMedials  @hahMedials_stack ];
@hahMedi_any_flat = [ @hahMedials_flat  @hahMedials_flat ];

# *NEXT 2 CLASSES MUST MATCH*								
@hahFinals     = [ hah-ar.fina jeem-ar.fina khah-ar.fina nyeh-ar.fina dyeh-ar.fina jeemTwodotsabove-ar.fina ];
@hahFinals_alt = [ hah-ar.fina.alt jeem-ar.fina.alt khah-ar.fina.alt nyeh-ar.fina.alt dyeh-ar.fina.alt jeemTwodotsabove-ar.fina.alt ];

# *NEXT 2 CLASSES MUST MATCH*	
@pre_hah_not_flat = [  behDotless-ar.medi beh-ar.medi peh-ar.medi beeh-ar.medi beeh-ar.medi.ss05 alefMaksura-ar.medi 
                       teh-ar.medi tehThreedotsdown-ar.medi theh-ar.medi behVinvertedbelow-ar.medi behVabove-ar.medi 
                       behVbelow-ar.medi behhamzaabove-ar.medi seen-ar.medi sheen-ar.medi sad-ar.medi dad-ar.medi 
                       ain-ar.medi ainThreedots-ar.medi ainThreedots-ar.medi.ss05 ghain-ar.medi ghainThreedotsabove-ar.medi 
                       ghainThreedotsabove-ar.medi.ss09 lam-ar.medi meem-ar.medi noon-ar.medi noonghunna-ar.medi 
                       noonTwodotsbelow-ar.medi noonAfrican-ar.medi yeh-ar.medi yeh-farsi.medi e-ar.medi 
                       ainTwodotshorizontalabove-ar.medi behThreedotsupbelow-ar.medi behThreedotsupabove-ar.medi 
                       behThreedotsupabove-ar.medi.ss09 yehHamzaabove-ar.medi yehTwodotsbelowHamzaabove-ar.medi 
                       yehTwodotsbelowDotabove-ar.medi yehThreedotsabove-farsi.medi yehThreedotsbelow-ar.medi
                       sad-ar.init.flat dad-ar.init.flat meem-ar.init.flat];

# This creates an alternate form that does NOT get shifted up to the same level as the medial hah.
# The forms that are NOT in this class are medial tah/zah, feh/qaf, and kaf/gaf and most initials.
@pre_hah_flat    = [ behDotless-ar.medi.flat beh-ar.medi.flat peh-ar.medi.flat beeh-ar.medi.flat beeh-ar.medi.flat.ss05 alefMaksura-ar.medi.flat 
                     teh-ar.medi.flat tehThreedotsdown-ar.medi.flat theh-ar.medi.flat behVinvertedbelow-ar.medi.flat behVabove-ar.medi.flat 
                     behVbelow-ar.medi.flat behhamzaabove-ar.medi.flat seen-ar.medi.flat sheen-ar.medi.flat sad-ar.medi.flat dad-ar.medi.flat 
                     ain-ar.medi.flat ainThreedots-ar.medi.flat ainThreedots-ar.medi.flat.ss05 ghain-ar.medi.flat ghainThreedotsabove-ar.medi.flat 
                     ghainThreedotsabove-ar.medi.flat.ss09 lam-ar.medi.flat meem-ar.medi.flat noon-ar.medi.flat noonghunna-ar.medi.flat 
                     noonTwodotsbelow-ar.medi.flat noonAfrican-ar.medi.flat yeh-ar.medi.flat yeh-farsi.medi.flat e-ar.medi.flat 
                     ainTwodotshorizontalabove-ar.medi.flat behThreedotsupbelow-ar.medi.flat behThreedotsupabove-ar.medi.flat 
                     behThreedotsupabove-ar.medi.flat.ss09 yehHamzaabove-ar.medi.flat yehTwodotsbelowHamzaabove-ar.medi.flat 
                     yehTwodotsbelowDotabove-ar.medi.flat yehThreedotsabove-farsi.medi.flat yehThreedotsbelow-ar.medi.flat
                     sad-ar.init.flat dad-ar.init.flat meem-ar.init.flat ];

# *NEXT 2 CLASSES MUST MATCH*	
@post_hah_final_toShift = [ ain-ar.fina ainThreedots-ar.fina ainThreedots-ar.fina.ss05 ainTwodotshorizontalabove-ar.fina 
                            ghain-ar.fina ghainThreedotsabove-ar.fina ghainThreedotsabove-ar.fina.ss09 seen-ar.fina 
                            sheen-ar.fina yeh-ar.fina yehTwodotsbelowHamzaabove-ar.fina yehTwodotsbelowDotabove-ar.fina 
                            yehThreedotsbelow-ar.fina yeh-farsi.fina yeh-farsi.fina.ss05 yehHamzaabove-ar.fina 
                            alefMaksura-ar.fina alef-ar.fina alef-ar.wide.fina alef-ar.wideshort.fina 
                            yehThreedotsabove-farsi.fina yehThreedotsabove-farsi.fina.ss09];

@post_hah_final_low =     [ ain-ar.fina.low ainThreedots-ar.fina.low ainThreedots-ar.fina.ss05.low ainTwodotshorizontalabove-ar.fina.low 
                            ghain-ar.fina.low ghainThreedotsabove-ar.fina.low ghainThreedotsabove-ar.fina.low.ss09 seen-ar.fina.low 
                            sheen-ar.fina.low yeh-ar.fina.low yehTwodotsbelowHamzaabove-ar.fina.low yehTwodotsbelowDotabove-ar.fina.low 
                            yehThreedotsbelow-ar.fina.low yeh-farsi.fina.low yeh-farsi.fina.ss05.low yehHamzaabove-ar.fina.low 
                            alefMaksura-ar.fina.low alef-ar.fina.low alef-ar.wide.fina.low alef-ar.wideshort.fina.low 
                            yehThreedotsabove-farsi.fina.low yehThreedotsabove-farsi.fina.low.ss09];

# The next two classes are just used for context. They do not need to match. I do not know the criteria for what goes in the class.
@pre_hah_shift_up_init = [ behDotless-ar.init beh-ar.init peh-ar.init beeh-ar.init beeh-ar.init.ss05 behThreedotsupbelow-ar.init 
                           behThreedotsupabove-ar.init behThreedotsupabove-ar.init.ss09 alefMaksura-ar.init teh-ar.init 
                           tehThreedotsdown-ar.init theh-ar.init behVinvertedbelow-ar.init behVabove-ar.init behVbelow-ar.init 
                           behhamzaabove-ar.init jeem-ar.init nyeh-ar.init hah-ar.init khah-ar.init dyeh-ar.init jeemTwodotsabove-ar.init 
                           seen-ar.init sheen-ar.init sad-ar.init dad-ar.init tah-ar.init tahThreedots-ar.init tahThreedots-ar.init.ss05 
                           tahThreedots-ar.init.ss09 tahTwodotsabove-ar.init zah-ar.init ain-ar.init ainThreedots-ar.init 
                           ainThreedots-ar.init.ss05 ainTwodotshorizontalabove-ar.init ghain-ar.init ghainThreedotsabove-ar.init 
                           ghainThreedotsabove-ar.init.ss09 feh-ar.init fehAfrican-ar.init veh-ar.init fehDotless-ar.init 
                           fehDotmovedbelow-ar.init fehTwodotsbelow-ar.init qafDotless-ar.init qaf-ar.init qafAfrican-ar.init 
                           qafDotabove-ar.init qafThreedotsabove-ar.init qafThreedotsabove-ar.init.ss05 qafThreedotsaboveAfrican-ar.init 
                           qafThreedotsaboveAfrican-ar.init.ss09 kaf-ar.init keheh-ar.init kehehThreedotsabove-ar.init kehehThreedotsabove-ar.init.ss05 
                           kehehThreedotsabove-ar.init.ss09 gaf-ar.init kafswash-ar.init ng-ar.init lam-ar.init meem-ar.init noon-ar.init 
                           noonAfrican-ar.init noonghunna-ar.init noonTwodotsbelow-ar.init heh-ar.init yehHamzaabove-ar.init 
                           yehTwodotsbelowHamzaabove-ar.init yehTwodotsbelowDotabove-ar.init yeh-ar.init yeh-farsi.init 
                           yeh-farsi.init.ss05 e-ar.init yehThreedotsbelow-ar.init yehThreedotsabove-farsi.init yehThreedotsabove-farsi.init.ss09];

@pre_hah_shift_up_medi = [ behDotless-ar.medi beh-ar.medi peh-ar.medi beeh-ar.medi beeh-ar.medi.ss05 behThreedotsupabove-ar.medi 
                           behThreedotsupabove-ar.medi.ss09 behThreedotsupbelow-ar.medi alefMaksura-ar.medi teh-ar.medi 
                           tehThreedotsdown-ar.medi theh-ar.medi behVinvertedbelow-ar.medi behVabove-ar.medi behVbelow-ar.medi 
                           behhamzaabove-ar.medi jeem-ar.medi nyeh-ar.medi hah-ar.medi khah-ar.medi dyeh-ar.medi 
                           jeemTwodotsabove-ar.medi seen-ar.medi sheen-ar.medi sad-ar.medi dad-ar.medi tah-ar.medi 
                           tahThreedots-ar.medi tahThreedots-ar.medi.ss05 tahThreedots-ar.medi.ss09 tahTwodotsabove-ar.medi 
                           zah-ar.medi ain-ar.medi ainThreedots-ar.medi ainThreedots-ar.medi.ss05 ainTwodotshorizontalabove-ar.medi 
                           ghain-ar.medi ghainThreedotsabove-ar.medi ghainThreedotsabove-ar.medi.ss09 feh-ar.medi 
                           fehAfrican-ar.medi veh-ar.medi fehDotless-ar.medi fehDotmovedbelow-ar.medi fehTwodotsbelow-ar.medi 
                           qafDotless-ar.medi qaf-ar.medi qafAfrican-ar.medi qafDotabove-ar.medi qafThreedotsabove-ar.medi 
                           qafThreedotsabove-ar.medi.ss05 qafThreedotsaboveAfrican-ar.medi qafThreedotsaboveAfrican-ar.medi.ss09 
                           kaf-ar.medi keheh-ar.medi kehehThreedotsabove-ar.medi kehehThreedotsabove-ar.medi.ss05 
                           kehehThreedotsabove-ar.medi.ss09 gaf-ar.medi kafswash-ar.medi ng-ar.medi lam-ar.medi meem-ar.medi 
                           noon-ar.medi noonghunna-ar.medi noonTwodotsbelow-ar.medi noonAfrican-ar.medi heh-ar.medi yehHamzaabove-ar.medi 
                           yehTwodotsbelowHamzaabove-ar.medi yehTwodotsbelowDotabove-ar.medi yeh-ar.medi yeh-farsi.medi 
                           yeh-farsi.medi.ss05 e-ar.medi yehThreedotsbelow-ar.medi yehThreedotsabove-farsi.medi yehThreedotsabove-farsi.medi.ss09];


#   <!--
#    ===========================
#          Allah Ligatures
#    ===========================
#    -->
    
#    <!-- These pairs of classes must match.  -->
    
@Lam1NoAllah = [lam-ar.init       lam-ar.medi];
@Lam1Allah = [lam-ar.init.allah1  lam-ar.medi.allah1];

@HehNoAllah = [heh-ar.fina];
@HehAllah = [heh-ar.fina.allah];

@AlefNoAllah = [alef-ar      alef-ar.fina        alefMadda-ar.fina       alefHamzaabove-ar.fina];
@AlefAllah = [alef-ar.allah  alef-ar.fina.allah  alefMadda-ar.fina.allah alefHamzaabove-ar.fina.allah];

#    <!-- Note that we don't need to include alef-hamza or alef-madda because they are decomposed. -->
@AlefNoAllahIsol = [alef-ar     alefMadda-ar       alefHamzaabove-ar        alef-ar.wide];
@AlefAllahIsol = [alef-ar.allah alefMadda-ar.allah alefHamzaabove-ar.allah  alef-ar.allah];


# THESE ARE USED FOR COLLISION AVOIDANCE - Required for Regular only

# Just used for context
@rehIsol =           [ reh-ar zain-ar];
@seenInit =          [ seen-ar.init          sheen-ar.init ];
@ainIsol =           [ ain-ar                ghain-ar ainThreedots-ar ainTwodotshorizontalabove-ar ghainThreedotsabove-ar];
@noonInit = [	noon-ar.init noonghunna-ar.init noonTwodotsbelow-ar.init noonAfrican-ar.init ];

# Slightly shorter tail for yeh-barree before beh/yeh/noon forms:
@pre_yb_need_alt = [ yeh-ar.medi yeh-ar.init yehHamzaabove-ar.medi yehHamzaabove-ar.init yehTwodotsbelowHamzaabove-ar.medi  yehTwodotsbelowHamzaabove-ar.init
	                   yehTwodotsbelowDotabove-ar.medi yehTwodotsbelowDotabove-ar.init yeh-farsi.medi yeh-farsi.init yehThreedotsabove-farsi.medi 
	                   yehThreedotsabove-farsi.init yehThreedotsbelow-ar.medi yehThreedotsbelow-ar.init lam-ar.medi lam-ar.init beh-ar.medi 
	                   beh-ar.init teh-ar.medi teh-ar.init tehThreedotsdown-ar.medi tehThreedotsdown-ar.init theh-ar.medi theh-ar.init 
	                   noon-ar.medi noon-ar.init noonghunna-ar.medi noonghunna-ar.init noonTwodotsbelow-ar.medi noonTwodotsbelow-ar.init 
	                   noonAfrican-ar.medi noonAfrican-ar.init behDotless-ar.medi behDotless-ar.init alefMaksura-ar.medi alefMaksura-ar.init];

# Next classes are used for substitutions, so they must match

# *NEXT 2 CLASSES MUST MATCH*
@dalIsol =           [ dal-ar thal-ar];
@dalIsol_alt =       [ dal-ar.alt thal-ar.alt];

# *NEXT 2 CLASSES MUST MATCH*								
@behIsol =           [ beh-ar      beeh-ar      behThreedotsupabove-ar       peh-ar      behThreedotsupbelow-ar      behhamzaabove-ar behVinvertedbelow-ar behVbelow-ar];
@behInit =           [ beh-ar.init beeh-ar.init behThreedotsupabove-ar.init  peh-ar.init behThreedotsupbelow-ar.init behhamzaabove-ar.init behVinvertedbelow-ar.init behVbelow-ar.init];

# *NEXT 3 CLASSES MUST MATCH*								
@seenFina =          [ seen-ar.fina          sheen-ar.fina ];
@seenFina_longtail = [ seen-ar.fina.longtail sheen-ar.fina.longtail];
@seenFina_shrtail =  [ seen-ar.fina.shrtail  sheen-ar.fina.shrtail];

# *NEXT 3 CLASSES MUST MATCH*								
@seenIsol =          [ seen-ar               sheen-ar ];
@seenIsol_shrtail =  [ seen-ar.shrtail       sheen-ar.shrtail ];
@seenIsol_longtail = [ seen-ar.longtail      sheen-ar.longtail ];

# *NEXT 3 CLASSES MUST MATCH*								
@yehIsol =            [ yehHamzaabove-ar yehThreedotsabove-farsi yehThreedotsabove-farsi.ss09 alefMaksura-ar yeh-ar yeh-ar.ss01 yeh-farsi 
                       e-ar yehThreedotsbelow-ar yehTwodotsbelowHamzaabove-ar yehTwodotsbelowDotabove-ar];
@yehIsol_shrtail =    [ yehHamzaabove-ar.shrtail yehThreedotsabove-farsi.shrtail yehThreedotsabove-farsi.shrtail.ss09 alefMaksura-ar.shrtail yeh-ar.shrtail yeh-ar.shrtail.ss01 yeh-farsi.shrtail 
                       e-ar.shrtail yehThreedotsbelow-ar.shrtail yehTwodotsbelowHamzaabove-ar.shrtail yehTwodotsbelowDotabove-ar.shrtail];
@yehIsol_longtail =   [ yehHamzaabove-ar.longtail yehThreedotsabove-farsi.longtail yehThreedotsabove-farsi.longtail.ss09 alefMaksura-ar.longtail yeh-ar.longtail yeh-ar.longtail.ss01 yeh-farsi.longtail 
                       e-ar.longtail yehThreedotsbelow-ar.longtail yehTwodotsbelowHamzaabove-ar.longtail yehTwodotsbelowDotabove-ar.longtail];

# *NEXT 3 CLASSES MUST MATCH*								
@yehFina =           [ yehHamzaabove-ar.fina yehThreedotsabove-farsi.fina yehThreedotsabove-farsi.fina.ss09 alefMaksura-ar.fina yeh-ar.fina yeh-ar.fina.ss01 yeh-farsi.fina
                       e-ar.fina yehThreedotsbelow-ar.fina yehTwodotsbelowHamzaabove-ar.fina yehTwodotsbelowDotabove-ar.fina];
@yehFina_shrtail =   [ yehHamzaabove-ar.fina.shrtail yehThreedotsabove-farsi.fina.shrtail yehThreedotsabove-farsi.fina.shrtail.ss09 alefMaksura-ar.fina.shrtail yeh-ar.fina.shrtail yeh-ar.fina.shrtail.ss01 yeh-farsi.fina.shrtail 
                       e-ar.fina.shrtail yehThreedotsbelow-ar.fina.shrtail yehTwodotsbelowHamzaabove-ar.fina.shrtail yehTwodotsbelowDotabove-ar.fina.shrtail];
@yehFina_longtail =   [ yehHamzaabove-ar.fina.longtail yehThreedotsabove-farsi.fina.longtail yehThreedotsabove-farsi.fina.longtail.ss09 alefMaksura-ar.fina.longtail yeh-ar.fina.longtail yeh-ar.fina.longtail.ss01 yeh-farsi.fina.longtail 
                        e-ar.fina.longtail yehThreedotsbelow-ar.fina.longtail yehTwodotsbelowHamzaabove-ar.fina.longtail yehTwodotsbelowDotabove-ar.fina.longtail];

# *NEXT 3 CLASSES MUST MATCH*								
@noonIsol = [	noon-ar noonghunna-ar noonTwodotsbelow-ar noonAfrican-ar ];
@noonIsol_longtail = [ noon-ar.longtail noonghunna-ar.longtail noonTwodotsbelow-ar.longtail noonAfrican-ar.longtail ];
@noonIsol_shrtail = [ noon-ar.shrtail noonghunna-ar.shrtail noonTwodotsbelow-ar.shrtail noonAfrican-ar.shrtail ];

# *NEXT 3 CLASSES MUST MATCH*								
@noonFina = [	noon-ar.fina noonghunna-ar.fina noonTwodotsbelow-ar.fina noonAfrican-ar.fina ];
@noonFina_longtail = [ noon-ar.fina.longtail noonghunna-ar.fina.longtail noonTwodotsbelow-ar.fina.longtail noonAfrican-ar.fina.longtail ];
@noonFina_shrtail = [ noon-ar.fina.shrtail noonghunna-ar.fina.shrtail noonTwodotsbelow-ar.fina.shrtail noonAfrican-ar.fina.shrtail ];

# *NEXT 2 CLASSES MUST MATCH*								
@wawIsol = [ waw-ar wawHamzaabove-ar oe-ar yu-ar kirghizyu-ar ];
@wawIsol_alt = [ waw-ar.alt wawHamzaabove-ar.alt oe-ar.alt yu-ar.alt kirghizyu-ar.alt ];

# *NEXT 2 CLASSES MUST MATCH*								
@wawFina = [ waw-ar.fina wawHamzaabove-ar.fina oe-ar.fina yu-ar.fina kirghizyu-ar.fina ];
@wawFina_alt = [ waw-ar.fina.alt wawHamzaabove-ar.fina.alt oe-ar.fina.alt yu-ar.fina.alt kirghizyu-ar.fina.alt ];


# Used in ccmp for marks

@hamzas = [ hamzaabove-ar  hamzabelow-ar  ];

@takes_hamzaAbove = [ damma-ar  dammatan-ar  fatha-ar  fathatan-ar  sukun-ar ];
@with_hamzaAbove = [ hamzaaboveDamma-ar  hamzaaboveDammatan-ar  hamzaaboveFatha-ar  hamzaaboveFathatan-ar  hamzaaboveSukun-ar  ];

@takes_hamzaBelow = [ kasra-ar  kasratan-ar ];
@with_hamzaBelow = [ hamzabelowKasra-ar  hamzabelowKasratan-ar ];

@takes_shadda = [ alefabove-ar  damma-ar   dammatan-ar  fatha-ar  fathatan-ar ];
@with_shadda = [ shadda_alef-ar  shadda_damma-ar  shadda_dammatan-ar  shadda_fatha-ar  shadda_fathatan-ar ];

# *NEXT 2 CLASSES MUST MATCH*		
@Digits_latn = [ zero one two three four five six seven eight nine];
@Digits_pnum = [ zero.pnum one.pnum two.pnum three.pnum four.pnum five.pnum six.pnum seven.pnum eight.pnum nine.pnum];

# *NEXT 2 CLASSES MUST MATCH*		
@Digits = [ zero one two three four five six seven eight nine zero-ar one-ar two-ar three-ar four-ar five-ar six-ar seven-ar eight-ar nine-ar];
@Digits.small = [ zero.small one.small two.small three.small four.small five.small six.small seven.small eight.small nine.small zero-ar.small one-ar.small two-ar.small three-ar.small four-ar.small five-ar.small six-ar.small seven-ar.small eight-ar.small nine-ar.small];

# *NEXT 3 CLASSES MUST MATCH*		
@EndofAyah = [ endofayah-ar endofayah-ar.ss02 endofayah-ar.ss03  ];
@EndofAyah2 = [ endofayah-ar.2 endofayah-ar.2.ss02 endofayah-ar.2.ss03  ];
@EndofAyah3 = [ endofayah-ar.3 endofayah-ar.3.ss02 endofayah-ar.3.ss03  ];

# None of these classes exist: @cno_longtail @c_shrtail @c_longtail 
@c_tailStd =   [ @cno_longtail noon-ar.ss01           noon-ar.fina.ss01      yeh-ar.ss01           yeh-ar.fina.ss01
                               yeh-farsi.ss05 yeh-farsi.fina.ss05 yehThreedotsabove-farsi.ss09 yehThreedotsabove-farsi.fina.ss09];
@c_tailShort = [ @c_shrtail    noon-ar.shrtail.ss01   noon-ar.shrtail.ss01   yeh-ar.shrtail.ss01   yeh-ar.fina.shrtail.ss01
                               yeh-farsi.shrtail.ss05 yeh-farsi.fina.shrtail.ss05 yehThreedotsabove-farsi.shrtail.ss09 yehThreedotsabove-farsi.fina.shrtail.ss09];
@c_tailLong =  [ @c_longtail   noon-ar.longtail.ss01  noon-ar.longtail.ss01  yeh-ar.longtail.ss01  yeh-ar.fina.longtail.ss01
                               yeh-farsi.longtail.ss05 yeh-farsi.fina.longtail.ss05 yehThreedotsabove-farsi.longtail.ss09 yehThreedotsabove-farsi.fina.longtail.ss09];


#************************************************************
# STANDALONE LOOKUPS                                             *
#************************************************************

#********************
# Font rendering check
#
# The following three lookups change "RenderingUnknown" to "RenderingOpenType"

lookup FontCheck_Unknow {
  lookupflag IgnoreMarks;
    sub [U n k o w ] by [O p e T y];
} FontCheck_Unknow;

lookup FontCheck_n {
  lookupflag IgnoreMarks;
    sub n by p e;
} FontCheck_n;

lookup FontCheck {
  lookupflag IgnoreMarks ;
    sub [R] e n d e r i n g 
      U' lookup FontCheck_Unknow 
      n' lookup FontCheck_Unknow
      k' lookup FontCheck_Unknow
      n'  
      o' lookup FontCheck_Unknow 
      w' lookup FontCheck_Unknow 
      n' lookup FontCheck_n;
} FontCheck;

# Subtending Mark lookups
# End of Ayah digits and number-ar - calt
lookup digit_small {
  sub @Digits by @Digits.small;
} digit_small;

# replace single digit Ayah with double digit Ayah - calt
lookup Ayah_2 {
	sub endofayah-ar by endofayah-ar.2;
} Ayah_2;

#replace single digit Ayah with triple digit Ayah - calt
lookup Ayah_3 {
	sub endofayah-ar by endofayah-ar.3;
} Ayah_3;

# replace single digit number-ar with double digit number-ar - calt
lookup number-ar_2 {
	sub number-ar by number-ar.2;
} number-ar_2;

#replace single digit number-ar with triple digit number-ar - calt
lookup number-ar_3 {
	sub number-ar by number-ar.3;
} number-ar_3;

# make the lam-alef ligature have colored hamzas if wanted
# not used??
lookup splitAlefHamza {
	sub alefHamzaabove-ar by alef-ar hamzaabove-ar;
	sub alefHamzabelow-ar by alef-ar hamzabelow-ar;
} splitAlefHamza;

# make alef into alef.wide
lookup alef2wide {
	sub alef-ar by alef-ar.wide;
} alef2wide;

# make alef into alef.wideshort
lookup alef2wideshort {
	sub alef-ar by alef-ar.wideshort;
} alef2wideshort;

# make combining hamza a hamza nostem
lookup hamza2nostem {
	sub [ hamzaabove-ar hamzabelow-ar ] by [hamzaabove-ar.nostem hamzabelow-ar.nostem ];
} hamza2nostem;

# Make only ss08 effect only fatha, kasra, and damma.ss08.
# (No special forms are needed for fatha and kasra.)
lookup ss08_aux {
	sub [ alef-ar alef-ar.high damma-ar ] by [ alef-ar.ss08 alef-ar.high.ss08 damma-ar.ss08 ];
	#sub alef-ar.high by alef-ar.high.ss08;
	#sub damma-ar by damma-ar.ss08;
} ss08_aux;


# .medi.stack - lower AP on left and higher on right; glyph to the right is positioned higher
#				(identical to .medi)
# .medi.low - glyph is positioned lower with APs at 0; connects to lowered final
# .medi.ss07 - flat form with APs at 0; glyph to the right is positioned at the same level

# Simple lowered final jeem - flatten chars that do not stack above hah finals.
lookup prehah_alt {
	lookupflag IgnoreMarks;

	sub @pre_hah_not_flat'  @hahMedials by  @pre_hah_flat;  #####
	sub @pre_hah_not_flat'  @hahFinals  by  @pre_hah_flat;
} prehah_alt;

# Simple lowered final jeem - using the lowered form.
lookup hahfinal_alt {
	lookupflag IgnoreMarks;

	sub @pre_hah_flat  @hahFinals'  by  @hahFinals_alt;
} hahfinal_alt;


# Create the stacking effect in the jeems.
lookup shift_pre_hah {
	lookupflag IgnoreMarks;

	# Case 1 - init jeem jeem - push up
	sub  @pre_hah_shift_up_init  @hahMedials  @hahMedials'  by  @hahMedials_stack;
	sub  @pre_hah_shift_up_init  @hahMedials'  @hahMedials_stack  by  @hahMedials_stack;

	# Case 2: init medi jeem jeem - push up
	sub  @pre_hah_shift_up_init  @pre_hah_shift_up_medi  @hahMedials'  by  @hahMedials_stack;

	# Case 3: init medi medi jeem jeem - push up
	sub  @pre_hah_shift_up_init  @pre_hah_shift_up_medi  @pre_hah_shift_up_medi  @hahMedials'  by  @hahMedials_stack;

	# Case 4: init jeem - push up
	sub  @pre_hah_shift_up_init  @hahMedials'  by  @hahMedials_stack;
	
	# Continue the stack...Do you ever have more than two .stack forms in a row? I think not...
	sub  @hahMedials_stack  @hahMedials'  by  @hahMedials_stack;
	
} shift_pre_hah;

# Lower final jeems after stacking and/or certain finals that should be lowered.
lookup shift_post_hah {
	lookupflag IgnoreMarks;
	
	# Case 5: shift final down:
	ignore sub @pre_hah_shift_up_init  @hahMedi_any  @hahMedi_any'      @post_hah_final_toShift;  # short word
	sub                                @hahMedi_any  @hahMedials'       @post_hah_final_toShift  by  @hahMedials_low ;
	sub                                @hahMedi_any  @hahMedials_stack' @post_hah_final_toShift  by  @hahMedials_low ;
	
	# Case 6: shift final down
	ignore sub @pre_hah_shift_up_init  @pre_hah_shift_up_medi  @hahMedi_any'      @post_hah_final_toShift;  # short word
	sub                                @pre_hah_shift_up_medi  @hahMedials'       @post_hah_final_toShift  by  @hahMedials_low;
	sub                                @pre_hah_shift_up_medi  @hahMedials_stack' @post_hah_final_toShift  by  @hahMedials_low;

	# Cases 5 & 6, step 2:
	sub @hahMedials_low  @post_hah_final_toShift'  by  @post_hah_final_low;
	
} shift_post_hah;


# Flatten glyphs that precede a stack.
lookup flatten_pre_hah {
	lookupflag IgnoreMarks;

	sub @pre_hah_not_flat'  @hahMedials_stack  by  @pre_hah_flat;  # or should this be hahMedi_any ??????????
} flatten_pre_hah;


lookup no_change {  # for chaining lookups
	ignore sub  @pre_hah_flat;
	ignore sub  @hahMedi_any;
} no_change;

lookup flatten_hah_aux {  # for chaining lookups
	sub @cno_ss07  by  @c_ss07;
	sub @hahMedials_stack by @hahMedials_flat;
} flatten_hah_aux;


# Flatten long jeem sequences - what these situations are is hard to describe. :-)
lookup flatten_hah {
	lookupflag IgnoreMarks;
	
	# Case 7:
	ignore sub  @c_init  @hahMedi_any';  # short sequence
	
	# flat jeem jeem jeem.low - don't flatten first jeem, it will make the prior flat form attach too low.
	sub @pre_hah_flat' lookup no_change  @hahMedi_any' lookup no_change  @hahMedi_any' lookup flatten_hah_aux;
	
	# Case 8: flatten jeems
	sub  @hahMedi_any' lookup flatten_hah_aux  @hahMedi_any  [ @post_hah_final_low @hahMedials_low @hahFinals ];
	
	# Case 8a: continue to flatten jeems
	sub  @hahMedials_flat  @hahMedi_any' lookup flatten_hah_aux;

} flatten_hah;


lookup cursive_exit_entry {
  lookupflag IgnoreMarks RightToLeft;
  pos cursive @entry @exit;
} cursive_exit_entry;


lookup kern_SubtendingMarks {
	# contextually kern the sign with digits so they are enclosed

	# Uniscribe or HarfBuzz 'latn'
	pos @EndofAyah3 @Digits.small' <-1375 0 -275 0> @Digits.small' <-1100 0 -300 0> @Digits.small' <-800 0 -350 0>;
	pos @EndofAyah2 @Digits.small' <-1100 0 -300 0> @Digits.small' <-800 0 -350 0>;
	pos @EndofAyah  @Digits.small' <-800 0 -350 0>;

	pos number-ar.3 @Digits.small' <-1525 190 -275 0> @Digits.small' <-1250 190 -300 0> @Digits.small' <-975 190 -350 0>;
	pos number-ar.2 @Digits.small' <-1200 190 -300 0> @Digits.small' <-900 190 -350 0>;
	pos number-ar   @Digits.small'  <-825 190 -350 0>;

	# HarfBuzz 'arab'
	pos @Digits.small' <-800 0 -350 0> @Digits.small' <-1100 0 -300 0> @Digits.small' <-1375 0 -275 0> @EndofAyah3;
	pos @Digits.small' <-800 0 -350 0> @Digits.small' <-1100 0 -300 0> @EndofAyah2;
	pos @Digits.small' <-800 0 -350 0> @EndofAyah;

	pos @Digits.small' <-975 190 -350 0> @Digits.small' <-1250 190 -300 0> @Digits.small' <-1525 190 -275 0> number-ar.3;
	pos @Digits.small' <-900 190 -350 0> @Digits.small' <-1200 190 -300 0> number-ar.2;
	pos @Digits.small' <-825 190 -350 0> number-ar;

} kern_SubtendingMarks;


# Attachment needs to happen after stacking hah forms.

lookup attachLigMarkReg {
	pos ligature lam_alef-ar <anchor 361 700> mark @_top   <anchor 356 -40> mark @_bottom
	            ligComponent <anchor 76 655>  mark @_top   <anchor 73 -40>  mark @_bottom;
	pos ligature lam_alef-ar.fina <anchor 352 684> mark @_top   <anchor 474 -50> mark @_bottom
	                 ligComponent <anchor 115 676> mark @_top   <anchor 67 -46>  mark @_bottom;
	pos ligature lam_alefHamzabelow-ar <anchor 361 680> mark @_top   <anchor 356 -40> mark @_bottom
	                      ligComponent <anchor 66 645>  mark @_top   <anchor 73 -40>  mark @_bottom;
	pos ligature lam_alefHamzabelow-ar.fina <anchor 352 684> mark @_top   <anchor 474 -50> mark @_bottom
	                           ligComponent <anchor 115 646>  mark @_top   <anchor 67 -336>  mark @_bottom;
	pos ligature lam_alefHamzaabove-ar <anchor 361 680> mark @_top   <anchor 356 -40> mark @_bottom
	                      ligComponent <anchor 109 866> mark @_top   <anchor 73 -40>  mark @_bottom;
	pos ligature lam_alefHamzaabove-ar.fina <anchor 352 684> mark @_top   <anchor 474 -50> mark @_bottom
	                           ligComponent <anchor 105 866>  mark @_top   <anchor 67 -46>  mark @_bottom;
	pos ligature lam_alefMadda-ar <anchor 361 680> mark @_top   <anchor 356 -40> mark @_bottom
	            ligComponent <anchor 86 765>  mark @_top   <anchor 73 -40>  mark @_bottom;
	pos ligature lam_alefMadda-ar.fina <anchor 373 689> mark @_top   <anchor 514 -50> mark @_bottom
	                      ligComponent <anchor 100 761> mark @_top   <anchor 107 -46>  mark @_bottom;

#	pos ligature allah-ar			<anchor 841 587> mark @_top
#							ligComponent	<anchor 670 547> mark @_top
#  						ligComponent	<anchor 498 523> mark @_top
#							ligComponent	<anchor 233 405> mark @_top;
 
} attachLigMarkReg;


lookup attachLigMarkLight {
	pos ligature lam_alef-ar <anchor 304 664> mark @_top   <anchor 362 -30> mark @_bottom
	            ligComponent <anchor 62 605>  mark @_top   <anchor 99 -30>  mark @_bottom;
	pos ligature lam_alef-ar.fina <anchor 407 659> mark @_top   <anchor 477 -30> mark @_bottom
	                 ligComponent <anchor 98 600> mark @_top    <anchor 90 -30>  mark @_bottom;
	pos ligature lam_alefHamzabelow-ar <anchor 317 664> mark @_top   <anchor 375 -30> mark @_bottom
	                      ligComponent <anchor 75 605>  mark @_top   <anchor 142 -230>  mark @_bottom;
	pos ligature lam_alefHamzabelow-ar.fina <anchor 400 670> mark @_top   <anchor 474 -30> mark @_bottom
	                           ligComponent <anchor 87 620>  mark @_top  <anchor 127 -270>  mark @_bottom;
	pos ligature lam_alefHamzaabove-ar <anchor 332 674> mark @_top  <anchor 385 -30> mark @_bottom
	                      ligComponent <anchor 85 805> mark @_top   <anchor 92 -30>  mark @_bottom;
	pos ligature lam_alefHamzaabove-ar.fina <anchor 407 659> mark @_top   <anchor 477 -30> mark @_bottom
	                           ligComponent <anchor 68 750>  mark @_top   <anchor 90 -30>  mark @_bottom;
	pos ligature lam_alefMadda-ar <anchor 407 659> mark @_top   <anchor 477 -30> mark @_bottom
	                 ligComponent <anchor 68 750>  mark @_top   <anchor 90 -30>  mark @_bottom;
	pos ligature lam_alefMadda-ar <anchor 304 664> mark @_top  <anchor 362 -30> mark @_bottom
	                 ligComponent <anchor 66 731> mark @_top   <anchor 99 -30>  mark @_bottom;
	pos ligature lam_alefMadda-ar.fina <anchor 407 659> mark @_top  <anchor 477 -30> mark @_bottom
	                      ligComponent <anchor 98 710> mark @_top   <anchor 90 -30>  mark @_bottom;

#	pos ligature allah-ar			<anchor 811 614> mark @_top
#							ligComponent	<anchor 635 562> mark @_top
#  						ligComponent	<anchor 465 493> mark @_top
#							ligComponent	<anchor 232 359> mark @_top;
} attachLigMarkLight;


lookup attachBaseMark {
	lookupflag 0;

	pos base @top       mark @_top;
	pos base @bottom    mark @_bottom;
	pos base @center    mark @_center;

#	pos base @topright  mark @_topright;
#	pos base @ogonek    mark @_ogonek;

#	pos base @caret_1   mark @_caret_1;
#	pos base @caret_2   mark @_caret_2;
#	pos base @caret_3   mark @_caret_3;

#	pos base @top_1     mark @_top_1;
#	pos base @top_2     mark @_top_2;
#	pos base @top_3     mark @_top_3;
#	pos base @top_4     mark @_top_4;

#	pos base @top_alef  mark @_top_alef;

#	pos base @bottom_1  mark @_bottom_1;
#	pos base @bottom_2  mark @_bottom_2;

} attachBaseMark;


@allBottomMarks = [ @_bottom  @bottom_MarkBase ];
@allTopMarks    = [ @top      @top_MarkBase ];

lookup attachTopMarkMark {
	lookupflag UseMarkFilteringSet @allTopMarks;
	
	pos mark @top_MarkBase    mark @_top;
} attachTopMarkMark;

lookup attachBottomMarkMark {
	lookupflag UseMarkFilteringSet @allBottomMarks;
	
	pos mark @bottom_MarkBase mark @_bottom;
} attachBottomMarkMark;


#************************************************************
# GSUB features                                             *
#************************************************************

feature aalt {
	feature ccmp;
	feature locl;
	feature frac;
	feature rlig;
	feature salt;
	feature ss01;
	feature ss02;
	feature ss03;
	feature ss04;
	feature ss05;
	feature ss07;
	feature ss08;
	feature ss09;
	feature calt;
} aalt;



feature ccmp {

  lookup FontCheck;

	# Always split alefhamza (0623, 0625) so the hamza can be colored:
	lookup ccmp_arab_1 {
		script arab;
			sub alefHamzaabove-ar by alef-ar hamzaabove-ar;
			sub alefHamzabelow-ar by alef-ar hamzabelow-ar;
	} ccmp_arab_1;

	# change alef and hamza to connecting versions unless after lam
	lookup ccmp_arab_3 {
		# Ignore all marks except the combining hamzas
		lookupflag UseMarkFilteringSet @hamzas;

		# Ignore cases where alef is preceded by lam
		ignore sub lam-ar alef-ar';

		# but otherwise change alef and hamza to connecting version:
		sub alef-ar' lookup alef2wide      hamzaabove-ar' lookup hamza2nostem;
		sub alef-ar' lookup alef2wideshort hamzabelow-ar' lookup hamza2nostem;
	} ccmp_arab_3;

	# ligate pairs of marks to handle multiple orders
	lookup ccmp_arab_4 {
		lookupflag 0;

		sub hamzaabove-ar  @takes_hamzaAbove  by  @with_hamzaAbove;
		sub @takes_hamzaAbove hamzaabove-ar   by  @with_hamzaAbove;

		sub hamzabelow-ar @takes_hamzaBelow  by  @with_hamzaBelow;
		sub @takes_hamzaBelow hamzabelow-ar  by  @with_hamzaBelow;

		sub shadda-ar @takes_shadda  by @with_shadda;
		sub @takes_shadda shadda-ar  by @with_shadda;

		sub fatha-ar alefabove-ar by fatha_alefabove-ar;
		sub alefabove-ar fatha-ar by fatha_alefabove-ar;
	} ccmp_arab_4;

} ccmp;

feature locl {
	script latn;
	script arab;

	lookup locl_lkp {
		sub space by space-ar;
		sub nbspace by nbspace-ar;
	} locl_lkp;
} locl;

feature frac {
	sub one slash four by onequarter;
	sub one slash two by onehalf;
	sub three slash four by threequarters;
} frac;


								
#********************
# for basic Arabic shaping features fina, medi, init:
#********************
								
feature init {
	# automatic
	lookup init_lkp {
		sub @DualLinkIsol  by  @DualLinkInit;
	} init_lkp;
} init;

feature medi {
	# automatic
	lookup medi_lkp {
		sub @DualLinkIsol  by  @DualLinkMedi;
	} medi_lkp;
} medi;

feature fina {
	# automatic
	lookup fina_lkp {
		sub [@DualLinkIsol @RightLinkIsol @RightLinkIsol_Alef]  by  [@DualLinkFina @RightLinkFina @RightLinkFina_Alef];
	} fina_lkp;
} fina;

#********************
# for feature rlig: required ligatures 
#********************


#********
# Allah "ligature" (implemented by variant forms for glyphs rather than by ligature glyph):

lookup _AllahSub_Alef {
    sub @AlefNoAllah  by  @AlefAllah;
} _AllahSub_Alef;

lookup _AllahSub_Lam1 {
    sub @Lam1NoAllah  by  @Lam1Allah;
} _AllahSub_Lam1;

lookup _AllahSub_Lam2 {
    sub lam-ar.medi     by lam-ar.medi.allah2;
} _AllahSub_Lam2;

lookup _AllahSub_Lam2_insertSA {    # insert shadda-alef
  lookupflag 0;
    sub lam-ar.medi  by  lam-ar.medi.allah2  shadda_alef-ar ;
} _AllahSub_Lam2_insertSA;

lookup _AllahSub_Heh {
    sub @HehNoAllah  by  @HehAllah;
} _AllahSub_Heh;

lookup _AllahSub_Shadda_insertA {
		sub shadda-ar     by   shadda_alef-ar;
} _AllahSub_Shadda_insertA;


# Note:
# The shadda-alef ligature is created later in a separate lookup - ShaddaAlefLigatures.
# Also the special form of the alef is created later (except in the case of Rule 3) - lookup AllahAlef -
# in order to allow for the lam-alef ligature exception.

lookup AllahLigatures {
  lookupflag 0;
    # Rule 3a: alefIso-lam-lam-heh (no shadda-alef)
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        lam-ar.init'        lookup _AllahSub_Lam1
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
        
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        @MarksAny'
        lam-ar.init'        lookup _AllahSub_Lam1
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
        
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        @MarksAny' 
        @MarksAny'
        lam-ar.init'        lookup _AllahSub_Lam1
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
    
    #Rule 3b: alefIso-lam-kasra-lam-heh (no shadda-alef)
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        lam-ar.init'        lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
        
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        @MarksAny'
        lam-ar.init'        lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
        
    sub @AlefNoAllahIsol'   lookup _AllahSub_Alef
        @MarksAny' 
        @MarksAny'
        lam-ar.init'        lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'        lookup _AllahSub_Lam2_insertSA
        @HehNoAllah'        lookup _AllahSub_Heh;
        
    # Rule 2: lam-lam-shadda-heh

    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
        lam-ar.medi'             lookup _AllahSub_Lam2
        [shadda_alef-ar shadda_fatha-ar]'	# Alkalami: these ligs are already created
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
        lam-ar.medi'             lookup _AllahSub_Lam2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
        lam-ar.medi'             lookup _AllahSub_Lam2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
        lam-ar.medi'             lookup _AllahSub_Lam2
        shadda-ar'               lookup _AllahSub_Shadda_insertA
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    # Rule 2b: lam-kasra-lam-shadda-heh
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
        kasra-ar'
        lam-ar.medi'             lookup _AllahSub_Lam2
        [shadda_alef-ar shadda_fatha-ar]'	   # Alkalami: these ligs are already created
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'             lookup _AllahSub_Lam2
        shadda-ar'
        [alefabove-ar fatha-ar]'
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'             lookup _AllahSub_Lam2
        [alefabove-ar fatha-ar]'
        shadda-ar'
        @HehNoAllah'             lookup _AllahSub_Heh;
        
    sub @Lam1NoAllah'            lookup _AllahSub_Lam1
    		kasra-ar'
        lam-ar.medi'             lookup _AllahSub_Lam2
        shadda-ar'               lookup _AllahSub_Shadda_insertA
        @HehNoAllah'             lookup _AllahSub_Heh;
        
} AllahLigatures;


lookup LamAlefLigatures {
	lookupflag IgnoreMarks RightToLeft;

	sub lam-ar.init alef-ar.fina by lam_alef-ar;
	sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
	sub lam-ar.init alefHamzaabove-ar.fina by lam_alefHamzaabove-ar;
	sub lam-ar.medi alefHamzaabove-ar.fina by lam_alefHamzaabove-ar.fina;
	sub lam-ar.init alefHamzabelow-ar.fina by lam_alefHamzabelow-ar;
	sub lam-ar.medi alefHamzabelow-ar.fina by lam_alefHamzabelow-ar.fina;
	sub lam-ar.init alefMadda-ar.fina by lam_alefMadda-ar;
	sub lam-ar.medi alefMadda-ar.fina by lam_alefMadda-ar.fina;
} LamAlefLigatures;

# Must be after LamAlefLigatures
lookup AllahAlef {  # clean up: make sure alef is correct form for Allah
	lookupflag IgnoreMarks;
		sub @AlefNoAllah'  lam-ar.init.allah1  by  @AlefAllah;
} AllahAlef;


feature dlig {
	sub f [i  l] by [fi  fl];
} dlig;


feature rlig {
  lookup AllahLigatures;
	lookup LamAlefLigatures;
	# Must be after LamAlefLigatures:
	lookup AllahAlef;
} rlig;



feature salt {
	lookup salt_lkp {
		# I think the .flat rules can be deleted.
		sub behDotless-ar.medi by behDotless-ar.medi.flat;
		sub beh-ar.medi by beh-ar.medi.flat;
		sub peh-ar.medi by peh-ar.medi.flat;
		sub beeh-ar.medi by beeh-ar.medi.flat;
		sub alefMaksura-ar.medi by alefMaksura-ar.medi.flat;
		sub teh-ar.medi by teh-ar.medi.flat;
		sub tehThreedotsdown-ar.medi by tehThreedotsdown-ar.medi.flat;
		sub theh-ar.medi by theh-ar.medi.flat;
		sub behThreedotsupbelow-ar.medi by behThreedotsupbelow-ar.medi.flat;
		sub behVinvertedbelow-ar.medi by behVinvertedbelow-ar.medi.flat;
		sub behVabove-ar.medi by behVabove-ar.medi.flat;
		sub behVbelow-ar.medi by behVbelow-ar.medi.flat;
		sub behhamzaabove-ar.medi by behhamzaabove-ar.medi.flat;
		sub seen-ar.medi by seen-ar.medi.flat;
		sub sheen-ar.medi by sheen-ar.medi.flat;
		sub sad-ar.medi by sad-ar.medi.flat;
		sub sad-ar.init by sad-ar.init.flat;
		sub dad-ar.medi by dad-ar.medi.flat;
		sub dad-ar.init by dad-ar.init.flat;
		sub ainThreedots-ar.medi by ainThreedots-ar.medi.flat;
		sub ainThreedots-ar.medi.ss05 by ainThreedots-ar.medi.flat.ss05;
		sub ainTwodotshorizontalabove-ar.medi by ainTwodotshorizontalabove-ar.medi.flat;
		sub ghain-ar.medi by ghain-ar.medi.flat;
		sub lam-ar.medi by lam-ar.medi.flat;
		sub meem-ar.medi by meem-ar.medi.flat;
		sub meem-ar.init by meem-ar.init.flat;
		sub noon-ar.medi by noon-ar.medi.flat;
		sub noonghunna-ar.medi by noonghunna-ar.medi.flat;
		sub noonTwodotsbelow-ar.medi by noonTwodotsbelow-ar.medi.flat;
		sub noonAfrican-ar.medi by noonAfrican-ar.medi.flat;
		sub yeh-ar.medi by yeh-ar.medi.flat;
		sub yehTwodotsbelowHamzaabove-ar.medi by yehTwodotsbelowHamzaabove-ar.medi.flat;
		sub yehTwodotsbelowDotabove-ar.medi by yehTwodotsbelowDotabove-ar.medi.flat;
		sub yeh-farsi.medi by yeh-farsi.medi.flat;
		sub e-ar.medi by e-ar.medi.flat;

		# alternate stacking; handled by calt
		sub jeem-ar.fina by jeem-ar.fina.alt;
		sub nyeh-ar.fina by nyeh-ar.fina.alt;
		sub hah-ar.fina by hah-ar.fina.alt;
		sub khah-ar.fina by khah-ar.fina.alt;
		sub dyeh-ar.fina by dyeh-ar.fina.alt;
		sub jeemTwodotsabove-ar.fina by jeemTwodotsabove-ar.fina.alt;

		# taller initial stroke - not used
		sub beh-ar.init by beh-ar.init.alt;

		# shorter tails - handled by calt
		sub dal-ar by dal-ar.alt;
		sub dal-ar.fina by dal-ar.fina.alt;   # currently not used
		sub thal-ar by thal-ar.alt;
		sub thal-ar.fina by thal-ar.fina.alt; # currently not used
		sub sad-ar by sad-ar.alt;             # currently not used
		sub sad-ar.fina by sad-ar.fina.alt;   # currently not used
		sub dad-ar by dad-ar.alt;             # currently not used
		sub dad-ar.fina by dad-ar.fina.alt;   # currently not used
		sub @wawFina by @wawFina_alt;
		sub yehbarree-ar.fina by yehbarree-ar.fina.alt;

		# alternate tail - not used
		sub ainThreedots-ar.fina.ss05 by ainThreedots-ar.fina.alt.ss05;

		# small latin and arabic digits for end of ayah - handled by calt
		#sub @cno_numAlt by @c_numAlt;
		#sub @cno_numArAlt by @c_numArAlt;
	} salt_lkp;

	# multiple tail swashes - handled by calt
	lookup salt_lkp2 {
		sub @c_tailStd  from  [@c_tailShort  @c_tailLong];
	} salt_lkp2;

} salt;

feature calt {

	lookup calt_lkp1 {
		lookupflag IgnoreMarks;

		# Slightly shorter tail for yeh-barree before beh/yeh/noon forms:
		sub @pre_yb_need_alt  yehbarree-ar.fina'  by  yehbarree-ar.fina.alt;
	} calt_lkp1;
	
	# Can these be moved down with the other jeem/hah lookups?
	lookup prehah_alt;
	lookup hahfinal_alt;

	lookup calt_lkp2 {
		lookupflag IgnoreMarks;
		# subs to avoid collisions in strings with dal-ar (rule 1)
		sub @seenIsol space-ar @dalIsol' by @dalIsol_alt;

		# subs to avoid collisions in strings with seen-ar (rules 2-8 , 6-7 not working)
		sub @seenIsol' space-ar @seenInit @wawFina by @seenIsol_shrtail;
		sub @seenIsol' space-ar @behInit by @seenIsol_longtail;
		sub @seenFina' space-ar @behInit by @seenFina_longtail;
		sub @seenFina' space-ar @seenInit @wawFina by @seenFina_shrtail;
		sub @seenFina' space-ar alefHamzabelow-ar @rehIsol by @seenFina_longtail;
		sub @seenFina' space-ar alefHamzaabove-ar @wawIsol by @seenFina_longtail;
		sub @seenFina' space-ar @ainIsol by @seenFina_longtail;
		
		# subs to avoid collisions in strings with yeh-ar (rules 9-14)
		sub @yehIsol' comma-ar space-ar @wawIsol by @yehIsol_shrtail;
		sub @yehIsol' space-ar @wawIsol by @yehIsol_longtail;
		sub @yehFina' space-ar lam-ar.init reh-ar.fina by @yehFina_shrtail;
		sub @yehFina' space-ar @ainIsol by @yehFina_shrtail;
		sub @yehFina' space-ar @rehIsol by @yehFina_longtail;
		sub @yehFina' space-ar @wawIsol by @yehFina_longtail;

		# subs to avoid collisions in strings with noon-ar (rules 15-36)
		sub @noonIsol' space-ar @seenIsol by @noonIsol_longtail;
		sub @noonIsol' space-ar teh-ar.init @wawFina by @noonIsol_longtail;
		sub @noonIsol' space-ar teh-ar.init @noonFina by @noonIsol_longtail;
		sub @noonIsol' space-ar theh-ar.init @noonFina by @noonIsol_longtail;
		sub @noonIsol' space-ar @dalIsol @wawIsol by @noonIsol_longtail;
		sub @noonIsol' space-ar @behIsol by @noonIsol_longtail;
		sub @noonIsol' space-ar @behInit by @noonIsol_longtail;
		sub @noonIsol' space-ar @noonInit @noonFina by @noonIsol_longtail;
		sub @noonIsol' space-ar @seenInit @wawFina by @noonIsol_longtail;
		sub @noonIsol' space-ar @seenInit @noonFina by @noonIsol_longtail;
		sub @noonIsol' space-ar @rehIsol by @noonIsol_longtail;
		sub @noonFina' space-ar teh-ar.init @wawFina by @noonFina_longtail;
		sub @noonFina' space-ar @dalIsol @wawIsol by @noonFina_longtail;
		sub @noonFina' space-ar @behInit by @noonFina_longtail;
		sub @noonFina' space-ar @behIsol by @noonFina_longtail;
		sub @noonFina' space-ar @seenInit @wawFina by @noonFina_shrtail;
		sub @noonFina' space-ar @seenInit @noonFina by @noonFina_shrtail;
		sub @noonFina' space-ar @rehIsol by @noonFina_longtail;
		sub @noonFina' space-ar @seenIsol by @noonFina_longtail;
		sub @noonFina' space-ar teh-ar.init @noonFina by @noonFina_longtail;
		sub @noonFina' space-ar theh-ar.init @noonFina by @noonFina_longtail;
		sub @noonFina' space-ar @noonInit @noonFina by @noonFina_longtail;

		# subs to avoid collisions in strings with waw-ar (rules 37-38)
		sub @noonIsol space-ar @wawIsol' by @wawIsol_alt;
		sub @noonFina space-ar @wawIsol' by @wawIsol_alt;

		#subs to get a short, high lam-ar.init with jeem/hah/khah (rule 39)
		sub lam-ar.init' @hahMedi_any  by  lam-ar.init.high;

		#subs to get a short, high alef-ar.init with lam followed by jeem/hah/khah (rule 40)
		sub alef-ar' lam-ar.init @hahMedi_any  by  alef-ar.high;

		# replace sequence of digits, up to three places
		# Uniscribe or Harfbuzz 'latn'
		sub @EndofAyah' lookup Ayah_3 @Digits' lookup digit_small @Digits' lookup digit_small @Digits' lookup digit_small;
		sub @EndofAyah' lookup Ayah_2 @Digits' lookup digit_small @Digits' lookup digit_small;
		sub @EndofAyah @Digits' lookup digit_small;

		sub number-ar' lookup number-ar_3 @Digits' lookup digit_small @Digits' lookup digit_small @Digits' lookup digit_small;
		sub number-ar' lookup number-ar_2 @Digits' lookup digit_small @Digits' lookup digit_small;
		sub number-ar @Digits' lookup digit_small;

		# HarfBuzz 'arab'
		sub @Digits' lookup digit_small @Digits' lookup digit_small @Digits' lookup digit_small @EndofAyah' lookup Ayah_3;
		sub @Digits' lookup digit_small @Digits' lookup digit_small @EndofAyah' lookup Ayah_2;
		sub @Digits' lookup digit_small @EndofAyah;

		sub @Digits' lookup digit_small @Digits' lookup digit_small @Digits' lookup digit_small number-ar' lookup number-ar_3;
		sub @Digits' lookup digit_small @Digits' lookup digit_small number-ar' lookup number-ar_2;
		sub @Digits' lookup digit_small number-ar;
	} calt_lkp2;

	# to keep Uniscribe from breaking/crashing
	lookup UniscribeFix {
		sub @EndofAyah' @Digits.small @Digits.small @Digits.small by @EndofAyah3;
		sub @EndofAyah' @Digits.small @Digits.small by @EndofAyah2;
		sub number-ar' @Digits.small @Digits.small @Digits.small by number-ar.3;
		sub number-ar' @Digits.small @Digits.small by number-ar.2;
	} UniscribeFix;
	
	# Create stacking jeem/hah behavior
	lookup shift_pre_hah;
	lookup shift_post_hah;
	lookup flatten_pre_hah;
	lookup flatten_hah;

} calt;


# Mirroring

feature rtlm {
	#script arab;
		sub @cno_rtl by @c_rtl;
} rtlm;

feature ltrm {
	#script latn;
		sub @c_rtl by @cno_rtl;
} ltrm;




# Warsh Hack alternate - has no dots on isolate and final

feature ss01 {
	featureNames {
		name 3 1 0x409 "Warsh hack";
	};
	lookup ss01_lkp {
		sub @cno_ss01 by @c_ss01;
	} ss01_lkp;
} ss01;


# End-of-ayah - double circles

feature ss02 {
	featureNames {
		name 3 1 0x409 "End of ayah A";
	};
	lookup ss02_lkp {
		sub @cno_ss02 by @c_ss02;
	} ss02_lkp;
} ss02;


# End-of-ayah - circle + square

feature ss03 {
	featureNames {
		name 3 1 0x409 "End of ayah B";
	};
	lookup ss03_lkp {
		sub @cno_ss03 by @c_ss03;
	} ss03_lkp;
} ss03;


# Large Imala e - dot vowel below

feature ss04 {
	featureNames {
		name 3 1 0x409 "Imala e";
	};
	lookup ss04_lkp {
		lookupflag RightToLeft;

		sub @cno_ss04 by @c_ss04;
	} ss04_lkp;
} ss04;


# Wagaf hack

feature ss05 {
	featureNames {
		name 3 1 0x409 "Wagaf hack";
	};
	lookup ss05_lkp {
		sub @cno_ss05 by @c_ss05;
	} ss05_lkp;
} ss05;


# Monkey-tail alternates - not supported

#feature ss06 {
#	lookup ss06_lkp {
#		sub @cno_ss06 by @c_ss06;
#	} ss06_lkp;
#} ss06;


# No stacking jeem/hah

feature ss07 {
	featureNames {
		name 3 1 0x409 "Jeem/hah";
	};
	# Basically undo the jeem stacking rules above. :-/
	lookup ss07_lkp {
		lookupflag IgnoreMarks;
		
		# flat jeem jeem - don't flatten first jeem, it will make the prior flat form attach too low.
		
		sub @pre_hah_flat' lookup no_change  @hahMedials_stack' lookup no_change  @hahMedials_flat;  # already flattened
		
		sub @pre_hah_flat' lookup no_change  @hahMedi_any' lookup no_change;
		
		sub lam-ar.init.high  @hahMedials_stack'  lookup no_change;

		sub @cno_ss07'    lookup flatten_hah_aux;
    sub @hahMedi_any' lookup flatten_hah_aux;
	} ss07_lkp;
	
	lookup ss07_lkp2 {
		lookupflag IgnoreMarks;
		
		sub @post_hah_final_low'  by  @post_hah_final_toShift;
		sub @hahMedials_low'      by  @hahMedials_flat;
	} ss07_lkp2;
} ss07;


# Alef + fatha/kasra/damma alternates

feature ss08 {
	featureNames {
		name 3 1 0x409 "Alef diacritic placement";
	};
	lookup ss08_lkp {
		sub [alef-ar alef-ar.high]' lookup ss08_aux [fatha-ar kasra-ar damma-ar]' lookup ss08_aux;
	} ss08_lkp;
} ss08;

# Wagaf small

feature ss09 {
	featureNames {
		name 3 1 0x409 "Wagaf";
	};
	lookup ss09_lkp {
		sub @cno_ss09 by @c_ss09;
	} ss09_lkp;
} ss09;

# digits
feature pnum {
  sub @Digits_latn by @Digits_pnum;
} pnum;



#************************************************************
# GPOS features                                             *
#************************************************************

# Note: we could possibly simplify the rules by removing the entry/exit APs from
# the pre-hah flat forms (sad-ar.medi.flat, etc), since I BELIEVE they are always
# on the baseline.

feature curs {
	lookup cursive_exit_entry;
} curs;


feature kern {
	lookup kern_SubtendingMarks;
} kern;


# Attach marks last, so they get positioned correctly on glyphs that have been shifted up.

ifinfo(familyName, "Alkalami") {

feature mark {
	lookup attachLigMarkReg;
	lookup attachBaseMark;
	lookup attachTopMarkMark;
	lookup attachBottomMarkMark;
} mark;

} # end ifinfo

ifinfo(familyName, "AlkalamiLight") {

feature mark {
	lookup attachLigMarkLight;
	lookup attachBaseMark;
	lookup attachTopMarkMark;
	lookup attachBottomMarkMark;
} mark;

} # end ifinfo
